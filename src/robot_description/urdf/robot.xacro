<?xml version="1.0"?>
  <robot name="sanitization_bot" xmlns:xacro="http://www.ros.org/wiki/xacro">
  	<xacro:include filename="$(find robot_description)/urdf/sanitization_bot.gazebo"/>
  	<xacro:include filename="$(find robot_description)/urdf/materials.xacro"/>
  	<xacro:include filename="$(find robot_description)/urdf/macros.xacro"/>

    <xacro:property name="PI" value="3.1415926535897931"/>

  	<xacro:property name="chassisHeight" value="0.1"/>
  	<xacro:property name="chassisLength" value=".4"/>
  	<xacro:property name="chassisWidth" value="0.4"/>
  	<xacro:property name="chassisMass" value="200"/>

    <xacro:property name="towerHeight" value="1"/>
    <xacro:property name="towerLength" value=".3"/>
    <xacro:property name="towerWidth" value=".3"/>
    <xacro:property name="towerMass" value="100"/>

  	<xacro:property name="wheelWidth" value="0.05"/>
  	<xacro:property name="wheelRadius" value="0.1"/>
  	<xacro:property name="wheelPos" value="0.1"/>
  	<xacro:property name="wheelMass" value="50"/>

  	<xacro:property name="cameraSize" value="0.1"/>
  	<xacro:property name="cameraMass" value="5"/>

    <link name="base_link" />

    <joint name="base_joint" type="fixed">
      <parent link="base_link"/>
      <child link="chassis"/>
      <origin xyz="0 0 ${wheelRadius}"/>
    </joint>

  	<link name='chassis'>
  	   <collision>
  	     <origin xyz="0 0 0" rpy="0 0 0"/>
  	     <geometry>
  	        <box size="${chassisLength} ${chassisWidth} ${chassisHeight}"/>
  	     </geometry>
  	   </collision>

       <visual>
  	     <origin xyz="0 0 0" rpy="0 0 0"/>
  	     <geometry>
           <box size="${chassisLength} ${chassisWidth} ${chassisHeight}"/>
  	     </geometry>
  	       <material name="grey"/>
  	   </visual>

  	   <inertial>
  	     <origin xyz="0 0 0" rpy="0 0 0"/>
  	     <mass value="${chassisMass}"/>
  	     <box_inertia m="${chassisMass}" x="${chassisLength}" y="${chassisWidth}" z="${chassisHeight}"/>
  	   </inertial>
    </link>

    <joint name = "tower" type = "fixed">
      <parent link = "chassis"/>
      <child link = "controlTower"/>
      <origin xyz="0 0 ${chassisHeight / 2}"/>
    </joint>

    <!-- ${wheelRadius + (chassisHeight + towerHeight) / 2} -->
    <link name = "controlTower">
      <collision>
        <origin xyz="0 0 ${towerHeight / 2}" rpy="0 0 0"/>
        <geometry>
           <box size="${towerLength} ${towerWidth} ${towerHeight}"/>
        </geometry>
      </collision>

      <visual>
        <origin xyz="0 0 ${towerHeight / 2}" rpy="0 0 0"/>
        <geometry>
           <box size="${towerLength} ${towerWidth} ${towerHeight}"/>
        </geometry>
        <material name="black"/>
      </visual>

      <inertial>
        <origin xyz="0 0 ${towerHeight / 2}" rpy="0 0 0"/>
        <mass value="${towerMass}"/>
        <box_inertia m="${towerMass}" x="${towerLength}" y="${towerWidth}" z="${towerHeight}"/>
      </inertial>
   </link>

   <xacro:wheel lr="left" fb="front" tY="1" tX = "1"/>
   <xacro:wheel lr="right" fb="front" tY="-1" tX = "1"/>
   <xacro:wheel lr="left" fb = "back" tY="1" tX = "-1"/>
   <xacro:wheel lr="right" fb = "back" tY="-1" tX = "-1"/>

   <joint name = "camera" type = "fixed">
     <parent link = "controlTower"/>
     <child link = "camera_link"/>
     <origin xyz="${towerLength / 2 + cameraSize / 2} 0 ${towerHeight * 3 / 4}"/>
   </joint>

   <link name="camera_link">
     <collision>
       <origin xyz="0 0 0" rpy="0 0 0"/>
       <geometry>
         <box size="${cameraSize} ${cameraSize} ${cameraSize}"/>
       </geometry>
     </collision>

     <visual>
       <origin xyz= "0 0 0" />
       <geometry>
         <!-- <mesh filename="package://rrbot_description/meshes/hokuyo.dae"/> -->
         <box size="${cameraSize} ${cameraSize} ${cameraSize}"/>
       </geometry>
     </visual>

     <inertial>
       <mass value="${cameraMass}" />
       <origin xyz="0 0 0" rpy="0 0 0"/>
       <xacro:box_inertia m = "${cameraMass}" x = "${cameraSize}"
         y = "${cameraSize}" z = "${cameraSize}"/>
     </inertial>
   </link>

   <joint name="camera_optical_joint" type="fixed">
   <origin xyz="0 0 0" rpy="${PI/2} ${PI} ${PI/2}"/>
   <parent link="camera_link"/>
   <child link="camera_link_optical"/>
   </joint>

   <link name="camera_link_optical">
     <collision>
       <origin xyz="0 0 0" rpy="0 0 0"/>
       <geometry>
         <box size="${cameraSize} ${cameraSize} ${cameraSize}"/>
       </geometry>
     </collision>
   </link>


   <joint name = "lidar" type = "fixed">
       <parent link = "controlTower"/>
       <child link = "lidar_link"/>
       <origin xyz="${towerLength / 2 + cameraSize / 2} 0 ${towerHeight / 4}"/>
   </joint>

   <link name="lidar_link">
     <collision>
       <origin xyz="0 0 0" rpy="0 0 0"/>
       <geometry>
         <box size="${cameraSize} ${cameraSize} ${cameraSize}"/>
       </geometry>
     </collision>

     <visual>
       <origin xyz= "0 0 0" />
       <geometry>
         <!-- <mesh filename="package://rrbot_description/meshes/hokuyo.dae"/> -->
         <box size="${cameraSize} ${cameraSize} ${cameraSize}"/>
       </geometry>
     </visual>

     <inertial>
       <mass value="${cameraMass}" />
       <origin xyz="0 0 0" rpy="0 0 0"/>
       <xacro:box_inertia m = "${cameraMass}" x = "${cameraSize}"
         y = "${cameraSize}" z = "${cameraSize}"/>
     </inertial>
   </link>
</robot>
